{
  "_from": "@babel/preset-stage-2",
  "_id": "@babel/preset-stage-2@7.0.0",
  "_inBundle": false,
  "_integrity": "sha512-A8ia2Wus0OAP6hh28ZgPSCBJEX3Jnql3kg9di/I+Lmg1gbJXgDZBrHr/UGZXl20Vi1lXgMuUq8c8J899KFr5gA==",
  "_location": "/@babel/preset-stage-2",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@babel%2fpreset-stage-2",
    "fetchSpec": "latest",
    "name": "@babel/preset-stage-2",
    "raw": "@babel/preset-stage-2",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@babel",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/preset-stage-2/-/preset-stage-2-7.0.0.tgz",
  "_shasum": "11ec31263c8466aad63829bba724607029ddf0a5",
  "_shrinkwrap": null,
  "_spec": "@babel/preset-stage-2",
  "_where": "D:\\git\\springbootReact\\fe",
  "author": {
    "email": "sebmck@gmail.com",
    "name": "Sebastian McKenzie"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Babel preset for stage 2 plugins",
  "devDependencies": {},
  "homepage": "https://babeljs.io/",
  "license": "MIT",
  "main": "lib/index.js",
  "name": "@babel/preset-stage-2",
  "optionalDependencies": {},
  "readme": "# @babel/preset-stage-2\n\nAs of v7.0.0-beta.55, we've removed Babel's Stage presets. Please consider reading our [blog post](https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets) on this decision for more details. TL;DR is that it's more beneficial in the long run to explicitly add which proposals to use.\n\n---\n\nFor a more automatic migration, we have updated [babel-upgrade](https://github.com/babel/babel-upgrade) to do this for you (you can run `npx babel-upgrade`).\n\nIf you want the same configuration as before:\n\n```json\n{\n  \"plugins\": [\n    // Stage 2\n    [\"@babel/plugin-proposal-decorators\", { \"legacy\": true }],\n    \"@babel/plugin-proposal-function-sent\",\n    \"@babel/plugin-proposal-export-namespace-from\",\n    \"@babel/plugin-proposal-numeric-separator\",\n    \"@babel/plugin-proposal-throw-expressions\",\n\n    // Stage 3\n    \"@babel/plugin-syntax-dynamic-import\",\n    \"@babel/plugin-syntax-import-meta\",\n    [\"@babel/plugin-proposal-class-properties\", { \"loose\": false }],\n    \"@babel/plugin-proposal-json-strings\"\n  ]\n}\n```\n\nIf you're using the same configuration across many separate projects,\nkeep in mind that you can also create your own custom presets with\nwhichever plugins and presets you're looking to use.\n\n```js\nmodule.exports = function() {\n  return {\n    plugins: [\n      require(\"@babel/plugin-syntax-dynamic-import\"),\n      [require(\"@babel/plugin-proposal-decorators\"), { \"legacy\": true }],\n      [require(\"@babel/plugin-proposal-class-properties\"), { \"loose\": false }],\n    ],\n    presets: [\n      // ...\n    ],\n  };\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-preset-stage-2"
  },
  "version": "7.0.0"
}
